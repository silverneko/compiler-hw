Terminals unused in grammar

   MK_DOT
   ERROR


State 197 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE

    8 function_head: type ID
    9              | VOID ID
   10              | ID ID

   11 opt_param_list: param_list
   12               | %empty

   13 param_list: param_list MK_COMMA param
   14           | param

   15 param: type ID
   16      | ID ID
   17      | type ID dim_fn
   18      | ID ID dim_fn

   19 dim_fn: MK_LB expr_null MK_RB
   20       | dim_fn MK_LB expr MK_RB

   21 expr_null: expr
   22          | %empty

   23 block: decl_list stmt_list
   24      | stmt_list
   25      | decl_list
   26      | %empty

   27 decl_list: decl_list decl
   28          | decl

   29 decl: type_decl
   30     | var_decl

   31 type_decl: TYPEDEF type id_list MK_SEMICOLON
   32          | TYPEDEF VOID id_list MK_SEMICOLON

   33 var_decl: type init_id_list MK_SEMICOLON
   34         | ID init_id_list MK_SEMICOLON

   35 type: INT
   36     | FLOAT

   37 id_list: ID
   38        | id_list MK_COMMA ID
   39        | id_list MK_COMMA ID dim_decl
   40        | ID dim_decl

   41 dim_decl: MK_LB cexpr MK_RB
   42         | dim_decl MK_LB cexpr MK_RB

   43 cexpr: cexpr OP_PLUS mcexpr
   44      | cexpr OP_MINUS mcexpr
   45      | mcexpr

   46 mcexpr: mcexpr OP_TIMES cfactor
   47       | mcexpr OP_DIVIDE cfactor
   48       | cfactor

   49 cfactor: CONST
   50        | MK_LPAREN cexpr MK_RPAREN

   51 init_id_list: init_id
   52             | init_id_list MK_COMMA init_id

   53 init_id: ID
   54        | ID dim_decl
   55        | ID OP_ASSIGN relop_expr

   56 stmt_list: stmt_list stmt
   57          | stmt

   58 stmt: MK_LBRACE block MK_RBRACE
   59     | WHILE MK_LPAREN test MK_RPAREN stmt
   60     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   61     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   62     | IF MK_LPAREN test MK_RPAREN stmt
   63     | IF MK_LPAREN test MK_RPAREN stmt ELSE stmt
   64     | ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   65     | MK_SEMICOLON
   66     | RETURN MK_SEMICOLON
   67     | RETURN relop_expr MK_SEMICOLON

   68 assign_expr_list: nonempty_assign_expr_list
   69                 | %empty

   70 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   71                          | assign_expr

   72 test: assign_expr

   73 assign_expr: ID OP_ASSIGN relop_expr
   74            | relop_expr

   75 relop_expr: relop_term
   76           | relop_expr OP_OR relop_term

   77 relop_term: relop_factor
   78           | relop_term OP_AND relop_factor

   79 relop_factor: expr
   80             | expr rel_op expr

   81 rel_op: OP_EQ
   82       | OP_GE
   83       | OP_LE
   84       | OP_NE
   85       | OP_GT
   86       | OP_LT

   87 relop_expr_list: nonempty_relop_expr_list
   88                | %empty

   89 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   90                         | relop_expr

   91 expr: expr add_op term
   92     | term

   93 add_op: OP_PLUS
   94       | OP_MINUS

   95 term: term mul_op factor
   96     | factor

   97 mul_op: OP_TIMES
   98       | OP_DIVIDE

   99 factor: MK_LPAREN relop_expr MK_RPAREN
  100       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
  101       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
  102       | CONST
  103       | OP_MINUS CONST
  104       | OP_NOT CONST
  105       | ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  108       | var_ref
  109       | OP_MINUS var_ref
  110       | OP_NOT var_ref

  111 var_ref: ID
  112        | ID dim_list

  113 dim_list: dim_list MK_LB expr MK_RB
  114         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 8 9 10 15 16 17 18 34 37 38 39 40 53 54 55 64 73 105 106 107
    111 112
CONST (259) 49 102 103 104
VOID (260) 9 32
INT (261) 35
FLOAT (262) 36
IF (263) 62 63
ELSE (264) 63
WHILE (265) 59
FOR (266) 60
TYPEDEF (267) 31 32
OP_ASSIGN (268) 55 61 73
OP_OR (269) 76
OP_AND (270) 78
OP_NOT (271) 101 104 107 110
OP_EQ (272) 81
OP_NE (273) 84
OP_GT (274) 85
OP_LT (275) 86
OP_GE (276) 82
OP_LE (277) 83
OP_PLUS (278) 43 93
OP_MINUS (279) 44 94 100 103 106 109
OP_TIMES (280) 46 97
OP_DIVIDE (281) 47 98
MK_LB (282) 19 20 41 42 113 114
MK_RB (283) 19 20 41 42 113 114
MK_LPAREN (284) 7 50 59 60 62 63 64 99 100 101 105 106 107
MK_RPAREN (285) 7 50 59 60 62 63 64 99 100 101 105 106 107
MK_LBRACE (286) 7 58
MK_RBRACE (287) 7 58
MK_COMMA (288) 13 38 39 52 70 89
MK_SEMICOLON (289) 31 32 33 34 60 61 64 65 66 67
MK_DOT (290)
ERROR (291)
RETURN (292) 66 67


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7, on right: 5 6
function_head (43)
    on left: 8 9 10, on right: 7
opt_param_list (44)
    on left: 11 12, on right: 7
param_list (45)
    on left: 13 14, on right: 11 13
param (46)
    on left: 15 16 17 18, on right: 13 14
dim_fn (47)
    on left: 19 20, on right: 17 18 20
expr_null (48)
    on left: 21 22, on right: 19
block (49)
    on left: 23 24 25 26, on right: 7 58
decl_list (50)
    on left: 27 28, on right: 5 23 25 27
decl (51)
    on left: 29 30, on right: 27 28
type_decl (52)
    on left: 31 32, on right: 29
var_decl (53)
    on left: 33 34, on right: 30
type (54)
    on left: 35 36, on right: 8 15 17 31 33
id_list (55)
    on left: 37 38 39 40, on right: 31 32 38 39
dim_decl (56)
    on left: 41 42, on right: 39 40 42 54
cexpr (57)
    on left: 43 44 45, on right: 41 42 43 44 50
mcexpr (58)
    on left: 46 47 48, on right: 43 44 45 46 47
cfactor (59)
    on left: 49 50, on right: 46 47 48
init_id_list (60)
    on left: 51 52, on right: 33 34 52
init_id (61)
    on left: 53 54 55, on right: 51 52
stmt_list (62)
    on left: 56 57, on right: 23 24 56
stmt (63)
    on left: 58 59 60 61 62 63 64 65 66 67, on right: 56 57 59 60 62
    63
assign_expr_list (64)
    on left: 68 69, on right: 60
nonempty_assign_expr_list (65)
    on left: 70 71, on right: 68 70
test (66)
    on left: 72, on right: 59 62 63
assign_expr (67)
    on left: 73 74, on right: 70 71 72
relop_expr (68)
    on left: 75 76, on right: 55 61 67 73 74 76 89 90 99 100 101
relop_term (69)
    on left: 77 78, on right: 75 76 78
relop_factor (70)
    on left: 79 80, on right: 77 78
rel_op (71)
    on left: 81 82 83 84 85 86, on right: 80
relop_expr_list (72)
    on left: 87 88, on right: 60 64 105 106 107
nonempty_relop_expr_list (73)
    on left: 89 90, on right: 87 89
expr (74)
    on left: 91 92, on right: 20 21 79 80 91 113 114
add_op (75)
    on left: 93 94, on right: 91
term (76)
    on left: 95 96, on right: 91 92 95
mul_op (77)
    on left: 97 98, on right: 95
factor (78)
    on left: 99 100 101 102 103 104 105 106 107 108 109 110, on right:
    95 96
var_ref (79)
    on left: 111 112, on right: 61 108 109 110
dim_list (80)
    on left: 113 114, on right: 112 113


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    function_head     go to state 10
    decl_list         go to state 11
    decl              go to state 12
    type_decl         go to state 13
    var_decl          go to state 14
    type              go to state 15


State 1

   10 function_head: ID . ID
   34 var_decl: ID . init_id_list MK_SEMICOLON

    ID  shift, and go to state 16

    init_id_list  go to state 17
    init_id       go to state 18


State 2

    9 function_head: VOID . ID

    ID  shift, and go to state 19


State 3

   35 type: INT .

    $default  reduce using rule 35 (type)


State 4

   36 type: FLOAT .

    $default  reduce using rule 36 (type)


State 5

   31 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   32          | TYPEDEF . VOID id_list MK_SEMICOLON

    VOID   shift, and go to state 20
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 21


State 6

    0 $accept: program . $end

    $end  shift, and go to state 22


State 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 23
    function_decl  go to state 9
    function_head  go to state 10
    decl_list      go to state 11
    decl           go to state 12
    type_decl      go to state 13
    var_decl       go to state 14
    type           go to state 15


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    7 function_decl: function_head . MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 24


State 11

    5 global_decl: decl_list . function_decl
   27 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 25
    function_head  go to state 10
    decl           go to state 26
    type_decl      go to state 13
    var_decl       go to state 14
    type           go to state 15


State 12

   28 decl_list: decl .

    $default  reduce using rule 28 (decl_list)


State 13

   29 decl: type_decl .

    $default  reduce using rule 29 (decl)


State 14

   30 decl: var_decl .

    $default  reduce using rule 30 (decl)


State 15

    8 function_head: type . ID
   33 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 27

    init_id_list  go to state 28
    init_id       go to state 18


State 16

   10 function_head: ID ID .
   53 init_id: ID .
   54        | ID . dim_decl
   55        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30

    MK_LPAREN  reduce using rule 10 (function_head)
    $default   reduce using rule 53 (init_id)

    dim_decl  go to state 31


State 17

   34 var_decl: ID init_id_list . MK_SEMICOLON
   52 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 32
    MK_SEMICOLON  shift, and go to state 33


State 18

   51 init_id_list: init_id .

    $default  reduce using rule 51 (init_id_list)


State 19

    9 function_head: VOID ID .

    $default  reduce using rule 9 (function_head)


State 20

   32 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 34

    id_list  go to state 35


State 21

   31 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 34

    id_list  go to state 36


State 22

    0 $accept: program $end .

    $default  accept


State 23

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 24

    7 function_decl: function_head MK_LPAREN . opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE

    ID     shift, and go to state 37
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    $default  reduce using rule 12 (opt_param_list)

    opt_param_list  go to state 38
    param_list      go to state 39
    param           go to state 40
    type            go to state 41


State 25

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 26

   27 decl_list: decl_list decl .

    $default  reduce using rule 27 (decl_list)


State 27

    8 function_head: type ID .
   53 init_id: ID .
   54        | ID . dim_decl
   55        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30

    MK_LPAREN  reduce using rule 8 (function_head)
    $default   reduce using rule 53 (init_id)

    dim_decl  go to state 31


State 28

   33 var_decl: type init_id_list . MK_SEMICOLON
   52 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 32
    MK_SEMICOLON  shift, and go to state 42


State 29

   55 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 48
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 30

   41 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cexpr    go to state 57
    mcexpr   go to state 58
    cfactor  go to state 59


State 31

   42 dim_decl: dim_decl . MK_LB cexpr MK_RB
   54 init_id: ID dim_decl .

    MK_LB  shift, and go to state 60

    $default  reduce using rule 54 (init_id)


State 32

   52 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 61

    init_id  go to state 62


State 33

   34 var_decl: ID init_id_list MK_SEMICOLON .

    $default  reduce using rule 34 (var_decl)


State 34

   37 id_list: ID .
   40        | ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 37 (id_list)

    dim_decl  go to state 63


State 35

   32 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   38 id_list: id_list . MK_COMMA ID
   39        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 64
    MK_SEMICOLON  shift, and go to state 65


State 36

   31 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   38 id_list: id_list . MK_COMMA ID
   39        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 64
    MK_SEMICOLON  shift, and go to state 66


State 37

   16 param: ID . ID
   18      | ID . ID dim_fn

    ID  shift, and go to state 67


State 38

    7 function_decl: function_head MK_LPAREN opt_param_list . MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_RPAREN  shift, and go to state 68


State 39

   11 opt_param_list: param_list .
   13 param_list: param_list . MK_COMMA param

    MK_COMMA  shift, and go to state 69

    $default  reduce using rule 11 (opt_param_list)


State 40

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 41

   15 param: type . ID
   17      | type . ID dim_fn

    ID  shift, and go to state 70


State 42

   33 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 33 (var_decl)


State 43

  105 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 72

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 73


State 44

  102 factor: CONST .

    $default  reduce using rule 102 (factor)


State 45

  101 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  104       | OP_NOT . CONST
  107       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  110       | OP_NOT . var_ref

    ID         shift, and go to state 74
    CONST      shift, and go to state 75
    MK_LPAREN  shift, and go to state 76

    var_ref  go to state 77


State 46

  100 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  103       | OP_MINUS . CONST
  106       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  109       | OP_MINUS . var_ref

    ID         shift, and go to state 78
    CONST      shift, and go to state 79
    MK_LPAREN  shift, and go to state 80

    var_ref  go to state 81


State 47

   99 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 82
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 48

   55 init_id: ID OP_ASSIGN relop_expr .
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 83

    $default  reduce using rule 55 (init_id)


State 49

   75 relop_expr: relop_term .
   78 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 84

    $default  reduce using rule 75 (relop_expr)


State 50

   77 relop_term: relop_factor .

    $default  reduce using rule 77 (relop_term)


State 51

   79 relop_factor: expr .
   80             | expr . rel_op expr
   91 expr: expr . add_op term

    OP_EQ     shift, and go to state 85
    OP_NE     shift, and go to state 86
    OP_GT     shift, and go to state 87
    OP_LT     shift, and go to state 88
    OP_GE     shift, and go to state 89
    OP_LE     shift, and go to state 90
    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 79 (relop_factor)

    rel_op  go to state 93
    add_op  go to state 94


State 52

   92 expr: term .
   95 term: term . mul_op factor

    OP_TIMES   shift, and go to state 95
    OP_DIVIDE  shift, and go to state 96

    $default  reduce using rule 92 (expr)

    mul_op  go to state 97


State 53

   96 term: factor .

    $default  reduce using rule 96 (term)


State 54

  108 factor: var_ref .

    $default  reduce using rule 108 (factor)


State 55

   49 cfactor: CONST .

    $default  reduce using rule 49 (cfactor)


State 56

   50 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cexpr    go to state 98
    mcexpr   go to state 58
    cfactor  go to state 59


State 57

   41 dim_decl: MK_LB cexpr . MK_RB
   43 cexpr: cexpr . OP_PLUS mcexpr
   44      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 99
    OP_MINUS  shift, and go to state 100
    MK_RB     shift, and go to state 101


State 58

   45 cexpr: mcexpr .
   46 mcexpr: mcexpr . OP_TIMES cfactor
   47       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 45 (cexpr)


State 59

   48 mcexpr: cfactor .

    $default  reduce using rule 48 (mcexpr)


State 60

   42 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cexpr    go to state 104
    mcexpr   go to state 58
    cfactor  go to state 59


State 61

   53 init_id: ID .
   54        | ID . dim_decl
   55        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30

    $default  reduce using rule 53 (init_id)

    dim_decl  go to state 31


State 62

   52 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 52 (init_id_list)


State 63

   40 id_list: ID dim_decl .
   42 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 60

    $default  reduce using rule 40 (id_list)


State 64

   38 id_list: id_list MK_COMMA . ID
   39        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 105


State 65

   32 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 32 (type_decl)


State 66

   31 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 31 (type_decl)


State 67

   16 param: ID ID .
   18      | ID ID . dim_fn

    MK_LB  shift, and go to state 106

    $default  reduce using rule 16 (param)

    dim_fn  go to state 107


State 68

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 108


State 69

   13 param_list: param_list MK_COMMA . param

    ID     shift, and go to state 37
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 109
    type   go to state 41


State 70

   15 param: type ID .
   17      | type ID . dim_fn

    MK_LB  shift, and go to state 106

    $default  reduce using rule 15 (param)

    dim_fn  go to state 110


State 71

  114 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 111
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 72

  105 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 112
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 113
    nonempty_relop_expr_list  go to state 114
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 73

  112 var_ref: ID dim_list .
  113 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 115

    $default  reduce using rule 112 (var_ref)


State 74

  107 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 116

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 73


State 75

  104 factor: OP_NOT CONST .

    $default  reduce using rule 104 (factor)


State 76

  101 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 117
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 77

  110 factor: OP_NOT var_ref .

    $default  reduce using rule 110 (factor)


State 78

  106 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 118

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 73


State 79

  103 factor: OP_MINUS CONST .

    $default  reduce using rule 103 (factor)


State 80

  100 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 119
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 81

  109 factor: OP_MINUS var_ref .

    $default  reduce using rule 109 (factor)


State 82

   76 relop_expr: relop_expr . OP_OR relop_term
   99 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 83
    MK_RPAREN  shift, and go to state 120


State 83

   76 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_term    go to state 121
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 84

   78 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_factor  go to state 122
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 85

   81 rel_op: OP_EQ .

    $default  reduce using rule 81 (rel_op)


State 86

   84 rel_op: OP_NE .

    $default  reduce using rule 84 (rel_op)


State 87

   85 rel_op: OP_GT .

    $default  reduce using rule 85 (rel_op)


State 88

   86 rel_op: OP_LT .

    $default  reduce using rule 86 (rel_op)


State 89

   82 rel_op: OP_GE .

    $default  reduce using rule 82 (rel_op)


State 90

   83 rel_op: OP_LE .

    $default  reduce using rule 83 (rel_op)


State 91

   93 add_op: OP_PLUS .

    $default  reduce using rule 93 (add_op)


State 92

   94 add_op: OP_MINUS .

    $default  reduce using rule 94 (add_op)


State 93

   80 relop_factor: expr rel_op . expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 123
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 94

   91 expr: expr add_op . term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    term     go to state 124
    factor   go to state 53
    var_ref  go to state 54


State 95

   97 mul_op: OP_TIMES .

    $default  reduce using rule 97 (mul_op)


State 96

   98 mul_op: OP_DIVIDE .

    $default  reduce using rule 98 (mul_op)


State 97

   95 term: term mul_op . factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    factor   go to state 125
    var_ref  go to state 54


State 98

   43 cexpr: cexpr . OP_PLUS mcexpr
   44      | cexpr . OP_MINUS mcexpr
   50 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 99
    OP_MINUS   shift, and go to state 100
    MK_RPAREN  shift, and go to state 126


State 99

   43 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    mcexpr   go to state 127
    cfactor  go to state 59


State 100

   44 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    mcexpr   go to state 128
    cfactor  go to state 59


State 101

   41 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 41 (dim_decl)


State 102

   46 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cfactor  go to state 129


State 103

   47 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    cfactor  go to state 130


State 104

   42 dim_decl: dim_decl MK_LB cexpr . MK_RB
   43 cexpr: cexpr . OP_PLUS mcexpr
   44      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 99
    OP_MINUS  shift, and go to state 100
    MK_RB     shift, and go to state 131


State 105

   38 id_list: id_list MK_COMMA ID .
   39        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 38 (id_list)

    dim_decl  go to state 132


State 106

   19 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 22 (expr_null)

    expr_null  go to state 133
    expr       go to state 134
    term       go to state 52
    factor     go to state 53
    var_ref    go to state 54


State 107

   18 param: ID ID dim_fn .
   20 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 135

    $default  reduce using rule 18 (param)


State 108

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 136
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 137
    WHILE         shift, and go to state 138
    FOR           shift, and go to state 139
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 140
    MK_SEMICOLON  shift, and go to state 141
    RETURN        shift, and go to state 142

    $default  reduce using rule 26 (block)

    block      go to state 143
    decl_list  go to state 144
    decl       go to state 12
    type_decl  go to state 13
    var_decl   go to state 14
    type       go to state 145
    stmt_list  go to state 146
    stmt       go to state 147
    var_ref    go to state 148


State 109

   13 param_list: param_list MK_COMMA param .

    $default  reduce using rule 13 (param_list)


State 110

   17 param: type ID dim_fn .
   20 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 135

    $default  reduce using rule 17 (param)


State 111

   91 expr: expr . add_op term
  114 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    MK_RB     shift, and go to state 149

    add_op  go to state 94


State 112

   76 relop_expr: relop_expr . OP_OR relop_term
   90 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 83

    $default  reduce using rule 90 (nonempty_relop_expr_list)


State 113

  105 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 150


State 114

   87 relop_expr_list: nonempty_relop_expr_list .
   89 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 151

    $default  reduce using rule 87 (relop_expr_list)


State 115

  113 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 152
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 116

  107 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 112
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 153
    nonempty_relop_expr_list  go to state 114
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 117

   76 relop_expr: relop_expr . OP_OR relop_term
  101 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 83
    MK_RPAREN  shift, and go to state 154


State 118

  106 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 112
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 155
    nonempty_relop_expr_list  go to state 114
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 119

   76 relop_expr: relop_expr . OP_OR relop_term
  100 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 83
    MK_RPAREN  shift, and go to state 156


State 120

   99 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 99 (factor)


State 121

   76 relop_expr: relop_expr OP_OR relop_term .
   78 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 84

    $default  reduce using rule 76 (relop_expr)


State 122

   78 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 78 (relop_term)


State 123

   80 relop_factor: expr rel_op expr .
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 80 (relop_factor)

    add_op  go to state 94


State 124

   91 expr: expr add_op term .
   95 term: term . mul_op factor

    OP_TIMES   shift, and go to state 95
    OP_DIVIDE  shift, and go to state 96

    $default  reduce using rule 91 (expr)

    mul_op  go to state 97


State 125

   95 term: term mul_op factor .

    $default  reduce using rule 95 (term)


State 126

   50 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 50 (cfactor)


State 127

   43 cexpr: cexpr OP_PLUS mcexpr .
   46 mcexpr: mcexpr . OP_TIMES cfactor
   47       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 43 (cexpr)


State 128

   44 cexpr: cexpr OP_MINUS mcexpr .
   46 mcexpr: mcexpr . OP_TIMES cfactor
   47       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 44 (cexpr)


State 129

   46 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 46 (mcexpr)


State 130

   47 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 47 (mcexpr)


State 131

   42 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 42 (dim_decl)


State 132

   39 id_list: id_list MK_COMMA ID dim_decl .
   42 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 60

    $default  reduce using rule 39 (id_list)


State 133

   19 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 157


State 134

   21 expr_null: expr .
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 21 (expr_null)

    add_op  go to state 94


State 135

   20 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 158
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 136

   34 var_decl: ID . init_id_list MK_SEMICOLON
   64 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  111 var_ref: ID .
  112        | ID . dim_list

    ID         shift, and go to state 61
    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 159

    $default  reduce using rule 111 (var_ref)

    init_id_list  go to state 17
    init_id       go to state 18
    dim_list      go to state 73


State 137

   62 stmt: IF . MK_LPAREN test MK_RPAREN stmt
   63     | IF . MK_LPAREN test MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 160


State 138

   59 stmt: WHILE . MK_LPAREN test MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 161


State 139

   60 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 162


State 140

   58 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 136
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 137
    WHILE         shift, and go to state 138
    FOR           shift, and go to state 139
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 140
    MK_SEMICOLON  shift, and go to state 141
    RETURN        shift, and go to state 142

    $default  reduce using rule 26 (block)

    block      go to state 163
    decl_list  go to state 144
    decl       go to state 12
    type_decl  go to state 13
    var_decl   go to state 14
    type       go to state 145
    stmt_list  go to state 146
    stmt       go to state 147
    var_ref    go to state 148


State 141

   65 stmt: MK_SEMICOLON .

    $default  reduce using rule 65 (stmt)


State 142

   66 stmt: RETURN . MK_SEMICOLON
   67     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 43
    CONST         shift, and go to state 44
    OP_NOT        shift, and go to state 45
    OP_MINUS      shift, and go to state 46
    MK_LPAREN     shift, and go to state 47
    MK_SEMICOLON  shift, and go to state 164

    relop_expr    go to state 165
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 143

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 166


State 144

   23 block: decl_list . stmt_list
   25      | decl_list .
   27 decl_list: decl_list . decl

    ID            shift, and go to state 136
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 137
    WHILE         shift, and go to state 138
    FOR           shift, and go to state 139
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 140
    MK_SEMICOLON  shift, and go to state 141
    RETURN        shift, and go to state 142

    $default  reduce using rule 25 (block)

    decl       go to state 26
    type_decl  go to state 13
    var_decl   go to state 14
    type       go to state 145
    stmt_list  go to state 167
    stmt       go to state 147
    var_ref    go to state 148


State 145

   33 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 61

    init_id_list  go to state 28
    init_id       go to state 18


State 146

   24 block: stmt_list .
   56 stmt_list: stmt_list . stmt

    ID            shift, and go to state 168
    IF            shift, and go to state 137
    WHILE         shift, and go to state 138
    FOR           shift, and go to state 139
    MK_LBRACE     shift, and go to state 140
    MK_SEMICOLON  shift, and go to state 141
    RETURN        shift, and go to state 142

    $default  reduce using rule 24 (block)

    stmt     go to state 169
    var_ref  go to state 148


State 147

   57 stmt_list: stmt .

    $default  reduce using rule 57 (stmt_list)


State 148

   61 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 170


State 149

  114 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 114 (dim_list)


State 150

  105 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 105 (factor)


State 151

   89 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 171
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 152

   91 expr: expr . add_op term
  113 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    MK_RB     shift, and go to state 172

    add_op  go to state 94


State 153

  107 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 173


State 154

  101 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 101 (factor)


State 155

  106 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 174


State 156

  100 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 100 (factor)


State 157

   19 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 19 (dim_fn)


State 158

   20 dim_fn: dim_fn MK_LB expr . MK_RB
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    MK_RB     shift, and go to state 175

    add_op  go to state 94


State 159

   64 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 112
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 176
    nonempty_relop_expr_list  go to state 114
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 160

   62 stmt: IF MK_LPAREN . test MK_RPAREN stmt
   63     | IF MK_LPAREN . test MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 177
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    test          go to state 178
    assign_expr   go to state 179
    relop_expr    go to state 180
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 161

   59 stmt: WHILE MK_LPAREN . test MK_RPAREN stmt

    ID         shift, and go to state 177
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    test          go to state 181
    assign_expr   go to state 179
    relop_expr    go to state 180
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 162

   60 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 177
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 69 (assign_expr_list)

    assign_expr_list           go to state 182
    nonempty_assign_expr_list  go to state 183
    assign_expr                go to state 184
    relop_expr                 go to state 180
    relop_term                 go to state 49
    relop_factor               go to state 50
    expr                       go to state 51
    term                       go to state 52
    factor                     go to state 53
    var_ref                    go to state 54


State 163

   58 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 185


State 164

   66 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 66 (stmt)


State 165

   67 stmt: RETURN relop_expr . MK_SEMICOLON
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 83
    MK_SEMICOLON  shift, and go to state 186


State 166

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 167

   23 block: decl_list stmt_list .
   56 stmt_list: stmt_list . stmt

    ID            shift, and go to state 168
    IF            shift, and go to state 137
    WHILE         shift, and go to state 138
    FOR           shift, and go to state 139
    MK_LBRACE     shift, and go to state 140
    MK_SEMICOLON  shift, and go to state 141
    RETURN        shift, and go to state 142

    $default  reduce using rule 23 (block)

    stmt     go to state 169
    var_ref  go to state 148


State 168

   64 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 159

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 73


State 169

   56 stmt_list: stmt_list stmt .

    $default  reduce using rule 56 (stmt_list)


State 170

   61 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 187
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 171

   76 relop_expr: relop_expr . OP_OR relop_term
   89 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 83

    $default  reduce using rule 89 (nonempty_relop_expr_list)


State 172

  113 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 113 (dim_list)


State 173

  107 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 107 (factor)


State 174

  106 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 106 (factor)


State 175

   20 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 20 (dim_fn)


State 176

   64 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 188


State 177

   73 assign_expr: ID . OP_ASSIGN relop_expr
  105 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    OP_ASSIGN  shift, and go to state 189
    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 72

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 73


State 178

   62 stmt: IF MK_LPAREN test . MK_RPAREN stmt
   63     | IF MK_LPAREN test . MK_RPAREN stmt ELSE stmt

    MK_RPAREN  shift, and go to state 190


State 179

   72 test: assign_expr .

    $default  reduce using rule 72 (test)


State 180

   74 assign_expr: relop_expr .
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 83

    $default  reduce using rule 74 (assign_expr)


State 181

   59 stmt: WHILE MK_LPAREN test . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 191


State 182

   60 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 192


State 183

   68 assign_expr_list: nonempty_assign_expr_list .
   70 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 193

    $default  reduce using rule 68 (assign_expr_list)


State 184

   71 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 71 (nonempty_assign_expr_list)


State 185

   58 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 58 (stmt)


State 186

   67 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 67 (stmt)


State 187

   61 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 83
    MK_SEMICOLON  shift, and go to state 194


State 188

   64 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 195


State 189

   73 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 196
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 190

   62 stmt: IF MK_LPAREN test MK_RPAREN . stmt
   63     | IF MK_LPAREN test MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 168
    IF            shift, and go to state 137
    WHILE         shift, and go to state 138
    FOR           shift, and go to state 139
    MK_LBRACE     shift, and go to state 140
    MK_SEMICOLON  shift, and go to state 141
    RETURN        shift, and go to state 142

    stmt     go to state 197
    var_ref  go to state 148


State 191

   59 stmt: WHILE MK_LPAREN test MK_RPAREN . stmt

    ID            shift, and go to state 168
    IF            shift, and go to state 137
    WHILE         shift, and go to state 138
    FOR           shift, and go to state 139
    MK_LBRACE     shift, and go to state 140
    MK_SEMICOLON  shift, and go to state 141
    RETURN        shift, and go to state 142

    stmt     go to state 198
    var_ref  go to state 148


State 192

   60 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 112
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 199
    nonempty_relop_expr_list  go to state 114
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 193

   70 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 177
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    assign_expr   go to state 200
    relop_expr    go to state 180
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 194

   61 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 61 (stmt)


State 195

   64 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 64 (stmt)


State 196

   73 assign_expr: ID OP_ASSIGN relop_expr .
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 83

    $default  reduce using rule 73 (assign_expr)


State 197

   62 stmt: IF MK_LPAREN test MK_RPAREN stmt .
   63     | IF MK_LPAREN test MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 201

    ELSE      [reduce using rule 62 (stmt)]
    $default  reduce using rule 62 (stmt)


State 198

   59 stmt: WHILE MK_LPAREN test MK_RPAREN stmt .

    $default  reduce using rule 59 (stmt)


State 199

   60 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 202


State 200

   70 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 70 (nonempty_assign_expr_list)


State 201

   63 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 168
    IF            shift, and go to state 137
    WHILE         shift, and go to state 138
    FOR           shift, and go to state 139
    MK_LBRACE     shift, and go to state 140
    MK_SEMICOLON  shift, and go to state 141
    RETURN        shift, and go to state 142

    stmt     go to state 203
    var_ref  go to state 148


State 202

   60 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 177
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 69 (assign_expr_list)

    assign_expr_list           go to state 204
    nonempty_assign_expr_list  go to state 183
    assign_expr                go to state 184
    relop_expr                 go to state 180
    relop_term                 go to state 49
    relop_factor               go to state 50
    expr                       go to state 51
    term                       go to state 52
    factor                     go to state 53
    var_ref                    go to state 54


State 203

   63 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 63 (stmt)


State 204

   60 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 205


State 205

   60 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 168
    IF            shift, and go to state 137
    WHILE         shift, and go to state 138
    FOR           shift, and go to state 139
    MK_LBRACE     shift, and go to state 140
    MK_SEMICOLON  shift, and go to state 141
    RETURN        shift, and go to state 142

    stmt     go to state 206
    var_ref  go to state 148


State 206

   60 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 60 (stmt)
