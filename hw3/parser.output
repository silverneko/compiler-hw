Nonterminals useless in grammar

   test


Terminals unused in grammar

   MK_DOT
   ERROR


Rules useless in grammar

  115 test: assign_expr


State 204 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | %empty

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | %empty

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON
   30         | ID id_list MK_SEMICOLON

   31 type: INT
   32     | FLOAT

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: MK_LB cexpr MK_RB

   38 cexpr: cexpr OP_PLUS mcexpr
   39      | cexpr OP_MINUS mcexpr
   40      | mcexpr

   41 mcexpr: mcexpr OP_TIMES cfactor
   42       | mcexpr OP_DIVIDE cfactor
   43       | cfactor

   44 cfactor: CONST
   45        | MK_LPAREN cexpr MK_RPAREN

   46 init_id_list: init_id
   47             | init_id_list MK_COMMA init_id

   48 init_id: ID
   49        | ID dim_decl
   50        | ID OP_ASSIGN relop_expr

   51 stmt_list: stmt_list stmt
   52          | stmt

   53 stmt: MK_LBRACE block MK_RBRACE
   54     | WHILE MK_LPAREN nonempty_expr_list MK_RPAREN stmt
   55     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   56     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   57     | IF MK_LPAREN nonempty_expr_list MK_RPAREN stmt if_tail
   58     | function_call
   59     | MK_SEMICOLON
   60     | RETURN MK_SEMICOLON
   61     | RETURN relop_expr MK_SEMICOLON

   62 if_tail: ELSE stmt
   63        | %empty

   64 function_call: ID MK_LPAREN expr_list MK_RPAREN

   65 expr_list: nonempty_expr_list
   66          | %empty

   67 nonempty_expr_list: nonempty_expr_list MK_COMMA expr
   68                   | expr

   69 assign_expr_list: nonempty_assign_expr_list
   70                 | %empty

   71 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   72                          | assign_expr

   73 assign_expr: ID OP_ASSIGN relop_expr
   74            | relop_expr

   75 relop_expr: relop_term
   76           | relop_expr OP_OR relop_term

   77 relop_term: relop_factor
   78           | relop_term OP_AND relop_factor

   79 relop_factor: expr
   80             | expr rel_op expr

   81 rel_op: OP_EQ
   82       | OP_GE
   83       | OP_LE
   84       | OP_NE
   85       | OP_GT
   86       | OP_LT

   87 relop_expr_list: nonempty_relop_expr_list
   88                | %empty

   89 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   90                         | relop_expr

   91 expr: expr add_op term
   92     | term

   93 add_op: OP_PLUS
   94       | OP_MINUS

   95 term: term mul_op factor
   96     | factor

   97 mul_op: OP_TIMES
   98       | OP_DIVIDE

   99 factor: MK_LPAREN relop_expr MK_RPAREN
  100       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
  101       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
  102       | CONST
  103       | OP_MINUS CONST
  104       | OP_NOT CONST
  105       | ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  108       | var_ref
  109       | OP_MINUS var_ref
  110       | OP_NOT var_ref

  111 var_ref: ID
  112        | ID dim_list

  113 dim_list: dim_list MK_LB expr MK_RB
  114         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 30 33 34 35 36 48 49 50 64 73 105 106 107 111
    112
CONST (259) 44 102 103 104
VOID (260) 8 10 28
INT (261) 31
FLOAT (262) 32
IF (263) 57
ELSE (264) 62
WHILE (265) 54
FOR (266) 55
TYPEDEF (267) 27 28
OP_ASSIGN (268) 50 56 73
OP_OR (269) 76
OP_AND (270) 78
OP_NOT (271) 101 104 107 110
OP_EQ (272) 81
OP_NE (273) 84
OP_GT (274) 85
OP_LT (275) 86
OP_GE (276) 82
OP_LE (277) 83
OP_PLUS (278) 38 93
OP_MINUS (279) 39 94 100 103 106 109
OP_TIMES (280) 41 97
OP_DIVIDE (281) 42 98
MK_LB (282) 15 16 37 113 114
MK_RB (283) 15 16 37 113 114
MK_LPAREN (284) 7 8 9 10 45 54 55 57 64 99 100 101 105 106 107
MK_RPAREN (285) 7 8 9 10 45 54 55 57 64 99 100 101 105 106 107
MK_LBRACE (286) 7 8 9 10 53
MK_RBRACE (287) 7 8 9 10 53
MK_COMMA (288) 11 34 35 47 67 71 89
MK_SEMICOLON (289) 27 28 29 30 55 56 59 60 61
MK_DOT (290)
ERROR (291)
RETURN (292) 60 61


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10, on right: 5 6
param_list (43)
    on left: 11 12, on right: 7 8 11
param (44)
    on left: 13 14, on right: 11 12
dim_fn (45)
    on left: 15 16, on right: 14 16
expr_null (46)
    on left: 17 18, on right: 15
block (47)
    on left: 19 20 21 22, on right: 7 8 9 10 53
decl_list (48)
    on left: 23 24, on right: 5 19 21 23
decl (49)
    on left: 25 26, on right: 23 24
type_decl (50)
    on left: 27 28, on right: 25
var_decl (51)
    on left: 29 30, on right: 26
type (52)
    on left: 31 32, on right: 7 9 13 14 27 29
id_list (53)
    on left: 33 34 35 36, on right: 27 28 30 34 35
dim_decl (54)
    on left: 37, on right: 35 36 49
cexpr (55)
    on left: 38 39 40, on right: 37 38 39 45
mcexpr (56)
    on left: 41 42 43, on right: 38 39 40 41 42
cfactor (57)
    on left: 44 45, on right: 41 42 43
init_id_list (58)
    on left: 46 47, on right: 29 47
init_id (59)
    on left: 48 49 50, on right: 46 47
stmt_list (60)
    on left: 51 52, on right: 19 20 51
stmt (61)
    on left: 53 54 55 56 57 58 59 60 61, on right: 51 52 54 55 57 62
if_tail (62)
    on left: 62 63, on right: 57
function_call (63)
    on left: 64, on right: 58
expr_list (64)
    on left: 65 66, on right: 64
nonempty_expr_list (65)
    on left: 67 68, on right: 54 57 65 67
assign_expr_list (66)
    on left: 69 70, on right: 55
nonempty_assign_expr_list (67)
    on left: 71 72, on right: 69 71
assign_expr (68)
    on left: 73 74, on right: 71 72
relop_expr (69)
    on left: 75 76, on right: 50 56 61 73 74 76 89 90 99 100 101
relop_term (70)
    on left: 77 78, on right: 75 76 78
relop_factor (71)
    on left: 79 80, on right: 77 78
rel_op (72)
    on left: 81 82 83 84 85 86, on right: 80
relop_expr_list (73)
    on left: 87 88, on right: 55 105 106 107
nonempty_relop_expr_list (74)
    on left: 89 90, on right: 87 89
expr (75)
    on left: 91 92, on right: 16 17 67 68 79 80 91 113 114
add_op (76)
    on left: 93 94, on right: 91
term (77)
    on left: 95 96, on right: 91 92 95
mul_op (78)
    on left: 97 98, on right: 95
factor (79)
    on left: 99 100 101 102 103 104 105 106 107 108 109 110, on right:
    95 96
var_ref (80)
    on left: 111 112, on right: 56 108 109 110
dim_list (81)
    on left: 113 114, on right: 112 113


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


State 1

   30 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 16


State 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 17


State 3

   31 type: INT .

    $default  reduce using rule 31 (type)


State 4

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


State 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON

    VOID   shift, and go to state 18
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 19


State 6

    0 $accept: program . $end

    $end  shift, and go to state 20


State 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 21
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    5 global_decl: decl_list . function_decl
   23 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 22
    decl           go to state 23
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


State 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


State 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


State 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 24

    init_id_list  go to state 25
    init_id       go to state 26


State 15

   33 id_list: ID .
   36        | ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 33 (id_list)

    dim_decl  go to state 28


State 16

   30 var_decl: ID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 30


State 17

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 31


State 18

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 32


State 19

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 33


State 20

    0 $accept: program $end .

    $default  accept


State 21

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 22

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 23

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


State 24

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   48 init_id: ID .
   49        | ID . dim_decl
   50        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27
    MK_LPAREN  shift, and go to state 35

    $default  reduce using rule 48 (init_id)

    dim_decl  go to state 36


State 25

   29 var_decl: type init_id_list . MK_SEMICOLON
   47 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


State 26

   46 init_id_list: init_id .

    $default  reduce using rule 46 (init_id_list)


State 27

   37 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 41
    mcexpr   go to state 42
    cfactor  go to state 43


State 28

   36 id_list: ID dim_decl .

    $default  reduce using rule 36 (id_list)


State 29

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 44


State 30

   30 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 30 (var_decl)


State 31

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 45

    param_list  go to state 46
    param       go to state 47
    type        go to state 48


State 32

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 49


State 33

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 50


State 34

   50 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 56
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 35

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 63

    param_list  go to state 64
    param       go to state 47
    type        go to state 48


State 36

   49 init_id: ID dim_decl .

    $default  reduce using rule 49 (init_id)


State 37

   47 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 65

    init_id  go to state 66


State 38

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


State 39

   44 cfactor: CONST .

    $default  reduce using rule 44 (cfactor)


State 40

   45 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 67
    mcexpr   go to state 42
    cfactor  go to state 43


State 41

   37 dim_decl: MK_LB cexpr . MK_RB
   38 cexpr: cexpr . OP_PLUS mcexpr
   39      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 68
    OP_MINUS  shift, and go to state 69
    MK_RB     shift, and go to state 70


State 42

   40 cexpr: mcexpr .
   41 mcexpr: mcexpr . OP_TIMES cfactor
   42       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 71
    OP_DIVIDE  shift, and go to state 72

    $default  reduce using rule 40 (cexpr)


State 43

   43 mcexpr: cfactor .

    $default  reduce using rule 43 (mcexpr)


State 44

   34 id_list: id_list MK_COMMA ID .
   35        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 73


State 45

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 74


State 46

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 75
    MK_COMMA   shift, and go to state 76


State 47

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


State 48

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 77


State 49

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


State 50

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


State 51

  105 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 78
    MK_LPAREN  shift, and go to state 79

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 80


State 52

  102 factor: CONST .

    $default  reduce using rule 102 (factor)


State 53

  101 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  104       | OP_NOT . CONST
  107       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  110       | OP_NOT . var_ref

    ID         shift, and go to state 81
    CONST      shift, and go to state 82
    MK_LPAREN  shift, and go to state 83

    var_ref  go to state 84


State 54

  100 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  103       | OP_MINUS . CONST
  106       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  109       | OP_MINUS . var_ref

    ID         shift, and go to state 85
    CONST      shift, and go to state 86
    MK_LPAREN  shift, and go to state 87

    var_ref  go to state 88


State 55

   99 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 89
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 56

   50 init_id: ID OP_ASSIGN relop_expr .
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 90

    $default  reduce using rule 50 (init_id)


State 57

   75 relop_expr: relop_term .
   78 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 91

    $default  reduce using rule 75 (relop_expr)


State 58

   77 relop_term: relop_factor .

    $default  reduce using rule 77 (relop_term)


State 59

   79 relop_factor: expr .
   80             | expr . rel_op expr
   91 expr: expr . add_op term

    OP_EQ     shift, and go to state 92
    OP_NE     shift, and go to state 93
    OP_GT     shift, and go to state 94
    OP_LT     shift, and go to state 95
    OP_GE     shift, and go to state 96
    OP_LE     shift, and go to state 97
    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99

    $default  reduce using rule 79 (relop_factor)

    rel_op  go to state 100
    add_op  go to state 101


State 60

   92 expr: term .
   95 term: term . mul_op factor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 92 (expr)

    mul_op  go to state 104


State 61

   96 term: factor .

    $default  reduce using rule 96 (term)


State 62

  108 factor: var_ref .

    $default  reduce using rule 108 (factor)


State 63

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 105


State 64

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 106
    MK_COMMA   shift, and go to state 76


State 65

   48 init_id: ID .
   49        | ID . dim_decl
   50        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27

    $default  reduce using rule 48 (init_id)

    dim_decl  go to state 36


State 66

   47 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 47 (init_id_list)


State 67

   38 cexpr: cexpr . OP_PLUS mcexpr
   39      | cexpr . OP_MINUS mcexpr
   45 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_RPAREN  shift, and go to state 107


State 68

   38 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 108
    cfactor  go to state 43


State 69

   39 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 109
    cfactor  go to state 43


State 70

   37 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 37 (dim_decl)


State 71

   41 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 110


State 72

   42 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 111


State 73

   35 id_list: id_list MK_COMMA ID dim_decl .

    $default  reduce using rule 35 (id_list)


State 74

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 112
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    $default  reduce using rule 22 (block)

    block          go to state 119
    decl_list      go to state 120
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 121
    stmt_list      go to state 122
    stmt           go to state 123
    function_call  go to state 124
    var_ref        go to state 125


State 75

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 126


State 76

   11 param_list: param_list MK_COMMA . param

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 127
    type   go to state 48


State 77

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 128

    $default  reduce using rule 13 (param)

    dim_fn  go to state 129


State 78

  114 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    expr     go to state 130
    term     go to state 60
    factor   go to state 61
    var_ref  go to state 62


State 79

  105 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 131
    relop_term                go to state 57
    relop_factor              go to state 58
    relop_expr_list           go to state 132
    nonempty_relop_expr_list  go to state 133
    expr                      go to state 59
    term                      go to state 60
    factor                    go to state 61
    var_ref                   go to state 62


State 80

  112 var_ref: ID dim_list .
  113 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 134

    $default  reduce using rule 112 (var_ref)


State 81

  107 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 78
    MK_LPAREN  shift, and go to state 135

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 80


State 82

  104 factor: OP_NOT CONST .

    $default  reduce using rule 104 (factor)


State 83

  101 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 136
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 84

  110 factor: OP_NOT var_ref .

    $default  reduce using rule 110 (factor)


State 85

  106 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 78
    MK_LPAREN  shift, and go to state 137

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 80


State 86

  103 factor: OP_MINUS CONST .

    $default  reduce using rule 103 (factor)


State 87

  100 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 138
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 88

  109 factor: OP_MINUS var_ref .

    $default  reduce using rule 109 (factor)


State 89

   76 relop_expr: relop_expr . OP_OR relop_term
   99 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 90
    MK_RPAREN  shift, and go to state 139


State 90

   76 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_term    go to state 140
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 91

   78 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_factor  go to state 141
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 92

   81 rel_op: OP_EQ .

    $default  reduce using rule 81 (rel_op)


State 93

   84 rel_op: OP_NE .

    $default  reduce using rule 84 (rel_op)


State 94

   85 rel_op: OP_GT .

    $default  reduce using rule 85 (rel_op)


State 95

   86 rel_op: OP_LT .

    $default  reduce using rule 86 (rel_op)


State 96

   82 rel_op: OP_GE .

    $default  reduce using rule 82 (rel_op)


State 97

   83 rel_op: OP_LE .

    $default  reduce using rule 83 (rel_op)


State 98

   93 add_op: OP_PLUS .

    $default  reduce using rule 93 (add_op)


State 99

   94 add_op: OP_MINUS .

    $default  reduce using rule 94 (add_op)


State 100

   80 relop_factor: expr rel_op . expr

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    expr     go to state 142
    term     go to state 60
    factor   go to state 61
    var_ref  go to state 62


State 101

   91 expr: expr add_op . term

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    term     go to state 143
    factor   go to state 61
    var_ref  go to state 62


State 102

   97 mul_op: OP_TIMES .

    $default  reduce using rule 97 (mul_op)


State 103

   98 mul_op: OP_DIVIDE .

    $default  reduce using rule 98 (mul_op)


State 104

   95 term: term mul_op . factor

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    factor   go to state 144
    var_ref  go to state 62


State 105

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 112
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    $default  reduce using rule 22 (block)

    block          go to state 145
    decl_list      go to state 120
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 121
    stmt_list      go to state 122
    stmt           go to state 123
    function_call  go to state 124
    var_ref        go to state 125


State 106

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 146


State 107

   45 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 45 (cfactor)


State 108

   38 cexpr: cexpr OP_PLUS mcexpr .
   41 mcexpr: mcexpr . OP_TIMES cfactor
   42       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 71
    OP_DIVIDE  shift, and go to state 72

    $default  reduce using rule 38 (cexpr)


State 109

   39 cexpr: cexpr OP_MINUS mcexpr .
   41 mcexpr: mcexpr . OP_TIMES cfactor
   42       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 71
    OP_DIVIDE  shift, and go to state 72

    $default  reduce using rule 39 (cexpr)


State 110

   41 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 41 (mcexpr)


State 111

   42 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 42 (mcexpr)


State 112

   30 var_decl: ID . id_list MK_SEMICOLON
   64 function_call: ID . MK_LPAREN expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    ID         shift, and go to state 15
    MK_LB      shift, and go to state 78
    MK_LPAREN  shift, and go to state 147

    $default  reduce using rule 111 (var_ref)

    id_list   go to state 16
    dim_list  go to state 80


State 113

   57 stmt: IF . MK_LPAREN nonempty_expr_list MK_RPAREN stmt if_tail

    MK_LPAREN  shift, and go to state 148


State 114

   54 stmt: WHILE . MK_LPAREN nonempty_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 149


State 115

   55 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 150


State 116

   53 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 112
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    $default  reduce using rule 22 (block)

    block          go to state 151
    decl_list      go to state 120
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 121
    stmt_list      go to state 122
    stmt           go to state 123
    function_call  go to state 124
    var_ref        go to state 125


State 117

   59 stmt: MK_SEMICOLON .

    $default  reduce using rule 59 (stmt)


State 118

   60 stmt: RETURN . MK_SEMICOLON
   61     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 51
    CONST         shift, and go to state 52
    OP_NOT        shift, and go to state 53
    OP_MINUS      shift, and go to state 54
    MK_LPAREN     shift, and go to state 55
    MK_SEMICOLON  shift, and go to state 152

    relop_expr    go to state 153
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 119

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 154


State 120

   19 block: decl_list . stmt_list
   21      | decl_list .
   23 decl_list: decl_list . decl

    ID            shift, and go to state 112
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    $default  reduce using rule 21 (block)

    decl           go to state 23
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 121
    stmt_list      go to state 155
    stmt           go to state 123
    function_call  go to state 124
    var_ref        go to state 125


State 121

   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 65

    init_id_list  go to state 25
    init_id       go to state 26


State 122

   20 block: stmt_list .
   51 stmt_list: stmt_list . stmt

    ID            shift, and go to state 156
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    $default  reduce using rule 20 (block)

    stmt           go to state 157
    function_call  go to state 124
    var_ref        go to state 125


State 123

   52 stmt_list: stmt .

    $default  reduce using rule 52 (stmt_list)


State 124

   58 stmt: function_call .

    $default  reduce using rule 58 (stmt)


State 125

   56 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 158


State 126

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 112
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    $default  reduce using rule 22 (block)

    block          go to state 159
    decl_list      go to state 120
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 121
    stmt_list      go to state 122
    stmt           go to state 123
    function_call  go to state 124
    var_ref        go to state 125


State 127

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


State 128

   15 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 18 (expr_null)

    expr_null  go to state 160
    expr       go to state 161
    term       go to state 60
    factor     go to state 61
    var_ref    go to state 62


State 129

   14 param: type ID dim_fn .
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 162

    $default  reduce using rule 14 (param)


State 130

   91 expr: expr . add_op term
  114 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99
    MK_RB     shift, and go to state 163

    add_op  go to state 101


State 131

   76 relop_expr: relop_expr . OP_OR relop_term
   90 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 90

    $default  reduce using rule 90 (nonempty_relop_expr_list)


State 132

  105 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 164


State 133

   87 relop_expr_list: nonempty_relop_expr_list .
   89 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 165

    $default  reduce using rule 87 (relop_expr_list)


State 134

  113 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    expr     go to state 166
    term     go to state 60
    factor   go to state 61
    var_ref  go to state 62


State 135

  107 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 131
    relop_term                go to state 57
    relop_factor              go to state 58
    relop_expr_list           go to state 167
    nonempty_relop_expr_list  go to state 133
    expr                      go to state 59
    term                      go to state 60
    factor                    go to state 61
    var_ref                   go to state 62


State 136

   76 relop_expr: relop_expr . OP_OR relop_term
  101 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 90
    MK_RPAREN  shift, and go to state 168


State 137

  106 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 131
    relop_term                go to state 57
    relop_factor              go to state 58
    relop_expr_list           go to state 169
    nonempty_relop_expr_list  go to state 133
    expr                      go to state 59
    term                      go to state 60
    factor                    go to state 61
    var_ref                   go to state 62


State 138

   76 relop_expr: relop_expr . OP_OR relop_term
  100 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 90
    MK_RPAREN  shift, and go to state 170


State 139

   99 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 99 (factor)


State 140

   76 relop_expr: relop_expr OP_OR relop_term .
   78 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 91

    $default  reduce using rule 76 (relop_expr)


State 141

   78 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 78 (relop_term)


State 142

   80 relop_factor: expr rel_op expr .
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99

    $default  reduce using rule 80 (relop_factor)

    add_op  go to state 101


State 143

   91 expr: expr add_op term .
   95 term: term . mul_op factor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 91 (expr)

    mul_op  go to state 104


State 144

   95 term: term mul_op factor .

    $default  reduce using rule 95 (term)


State 145

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 171


State 146

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 112
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    $default  reduce using rule 22 (block)

    block          go to state 172
    decl_list      go to state 120
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 121
    stmt_list      go to state 122
    stmt           go to state 123
    function_call  go to state 124
    var_ref        go to state 125


State 147

   64 function_call: ID MK_LPAREN . expr_list MK_RPAREN

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 66 (expr_list)

    expr_list           go to state 173
    nonempty_expr_list  go to state 174
    expr                go to state 175
    term                go to state 60
    factor              go to state 61
    var_ref             go to state 62


State 148

   57 stmt: IF MK_LPAREN . nonempty_expr_list MK_RPAREN stmt if_tail

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    nonempty_expr_list  go to state 176
    expr                go to state 175
    term                go to state 60
    factor              go to state 61
    var_ref             go to state 62


State 149

   54 stmt: WHILE MK_LPAREN . nonempty_expr_list MK_RPAREN stmt

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    nonempty_expr_list  go to state 177
    expr                go to state 175
    term                go to state 60
    factor              go to state 61
    var_ref             go to state 62


State 150

   55 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 178
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 70 (assign_expr_list)

    assign_expr_list           go to state 179
    nonempty_assign_expr_list  go to state 180
    assign_expr                go to state 181
    relop_expr                 go to state 182
    relop_term                 go to state 57
    relop_factor               go to state 58
    expr                       go to state 59
    term                       go to state 60
    factor                     go to state 61
    var_ref                    go to state 62


State 151

   53 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 183


State 152

   60 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 60 (stmt)


State 153

   61 stmt: RETURN relop_expr . MK_SEMICOLON
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 90
    MK_SEMICOLON  shift, and go to state 184


State 154

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


State 155

   19 block: decl_list stmt_list .
   51 stmt_list: stmt_list . stmt

    ID            shift, and go to state 156
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    $default  reduce using rule 19 (block)

    stmt           go to state 157
    function_call  go to state 124
    var_ref        go to state 125


State 156

   64 function_call: ID . MK_LPAREN expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 78
    MK_LPAREN  shift, and go to state 147

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 80


State 157

   51 stmt_list: stmt_list stmt .

    $default  reduce using rule 51 (stmt_list)


State 158

   56 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 185
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 159

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 186


State 160

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 187


State 161

   17 expr_null: expr .
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 101


State 162

   16 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    expr     go to state 188
    term     go to state 60
    factor   go to state 61
    var_ref  go to state 62


State 163

  114 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 114 (dim_list)


State 164

  105 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 105 (factor)


State 165

   89 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 189
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 166

   91 expr: expr . add_op term
  113 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99
    MK_RB     shift, and go to state 190

    add_op  go to state 101


State 167

  107 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 191


State 168

  101 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 101 (factor)


State 169

  106 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 192


State 170

  100 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 100 (factor)


State 171

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


State 172

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 193


State 173

   64 function_call: ID MK_LPAREN expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 194


State 174

   65 expr_list: nonempty_expr_list .
   67 nonempty_expr_list: nonempty_expr_list . MK_COMMA expr

    MK_COMMA  shift, and go to state 195

    $default  reduce using rule 65 (expr_list)


State 175

   68 nonempty_expr_list: expr .
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99

    $default  reduce using rule 68 (nonempty_expr_list)

    add_op  go to state 101


State 176

   57 stmt: IF MK_LPAREN nonempty_expr_list . MK_RPAREN stmt if_tail
   67 nonempty_expr_list: nonempty_expr_list . MK_COMMA expr

    MK_RPAREN  shift, and go to state 196
    MK_COMMA   shift, and go to state 195


State 177

   54 stmt: WHILE MK_LPAREN nonempty_expr_list . MK_RPAREN stmt
   67 nonempty_expr_list: nonempty_expr_list . MK_COMMA expr

    MK_RPAREN  shift, and go to state 197
    MK_COMMA   shift, and go to state 195


State 178

   73 assign_expr: ID . OP_ASSIGN relop_expr
  105 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    OP_ASSIGN  shift, and go to state 198
    MK_LB      shift, and go to state 78
    MK_LPAREN  shift, and go to state 79

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 80


State 179

   55 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 199


State 180

   69 assign_expr_list: nonempty_assign_expr_list .
   71 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 200

    $default  reduce using rule 69 (assign_expr_list)


State 181

   72 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 72 (nonempty_assign_expr_list)


State 182

   74 assign_expr: relop_expr .
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 90

    $default  reduce using rule 74 (assign_expr)


State 183

   53 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 53 (stmt)


State 184

   61 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 61 (stmt)


State 185

   56 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 90
    MK_SEMICOLON  shift, and go to state 201


State 186

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


State 187

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


State 188

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99
    MK_RB     shift, and go to state 202

    add_op  go to state 101


State 189

   76 relop_expr: relop_expr . OP_OR relop_term
   89 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 90

    $default  reduce using rule 89 (nonempty_relop_expr_list)


State 190

  113 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 113 (dim_list)


State 191

  107 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 107 (factor)


State 192

  106 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 106 (factor)


State 193

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 194

   64 function_call: ID MK_LPAREN expr_list MK_RPAREN .

    $default  reduce using rule 64 (function_call)


State 195

   67 nonempty_expr_list: nonempty_expr_list MK_COMMA . expr

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    expr     go to state 203
    term     go to state 60
    factor   go to state 61
    var_ref  go to state 62


State 196

   57 stmt: IF MK_LPAREN nonempty_expr_list MK_RPAREN . stmt if_tail

    ID            shift, and go to state 156
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    stmt           go to state 204
    function_call  go to state 124
    var_ref        go to state 125


State 197

   54 stmt: WHILE MK_LPAREN nonempty_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 156
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    stmt           go to state 205
    function_call  go to state 124
    var_ref        go to state 125


State 198

   73 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 206
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 199

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 51
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 131
    relop_term                go to state 57
    relop_factor              go to state 58
    relop_expr_list           go to state 207
    nonempty_relop_expr_list  go to state 133
    expr                      go to state 59
    term                      go to state 60
    factor                    go to state 61
    var_ref                   go to state 62


State 200

   71 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 178
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    assign_expr   go to state 208
    relop_expr    go to state 182
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


State 201

   56 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 56 (stmt)


State 202

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


State 203

   67 nonempty_expr_list: nonempty_expr_list MK_COMMA expr .
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 98
    OP_MINUS  shift, and go to state 99

    $default  reduce using rule 67 (nonempty_expr_list)

    add_op  go to state 101


State 204

   57 stmt: IF MK_LPAREN nonempty_expr_list MK_RPAREN stmt . if_tail

    ELSE  shift, and go to state 209

    ELSE      [reduce using rule 63 (if_tail)]
    $default  reduce using rule 63 (if_tail)

    if_tail  go to state 210


State 205

   54 stmt: WHILE MK_LPAREN nonempty_expr_list MK_RPAREN stmt .

    $default  reduce using rule 54 (stmt)


State 206

   73 assign_expr: ID OP_ASSIGN relop_expr .
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 90

    $default  reduce using rule 73 (assign_expr)


State 207

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 211


State 208

   71 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 71 (nonempty_assign_expr_list)


State 209

   62 if_tail: ELSE . stmt

    ID            shift, and go to state 156
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    stmt           go to state 212
    function_call  go to state 124
    var_ref        go to state 125


State 210

   57 stmt: IF MK_LPAREN nonempty_expr_list MK_RPAREN stmt if_tail .

    $default  reduce using rule 57 (stmt)


State 211

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 178
    CONST      shift, and go to state 52
    OP_NOT     shift, and go to state 53
    OP_MINUS   shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 70 (assign_expr_list)

    assign_expr_list           go to state 213
    nonempty_assign_expr_list  go to state 180
    assign_expr                go to state 181
    relop_expr                 go to state 182
    relop_term                 go to state 57
    relop_factor               go to state 58
    expr                       go to state 59
    term                       go to state 60
    factor                     go to state 61
    var_ref                    go to state 62


State 212

   62 if_tail: ELSE stmt .

    $default  reduce using rule 62 (if_tail)


State 213

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 214


State 214

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 156
    IF            shift, and go to state 113
    WHILE         shift, and go to state 114
    FOR           shift, and go to state 115
    MK_LBRACE     shift, and go to state 116
    MK_SEMICOLON  shift, and go to state 117
    RETURN        shift, and go to state 118

    stmt           go to state 215
    function_call  go to state 124
    var_ref        go to state 125


State 215

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 55 (stmt)
